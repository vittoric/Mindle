services:
  backend:
    build: ./backend
    container_name: backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      # - redis
    env_file:
      - .env
    restart: always
    networks:
      - docker_network

  frontend:
    build: ./frontend
    container_name: frontend
    command: yarn dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - db
      - backend
    env_file:
      - .env
    restart: always
    networks:
      - docker_network

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - backend
      - frontend
      - db
    restart: always
    networks:
      - docker_network

  db:
    image: postgres:15
    container_name: db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    env_file:
      - .env
    restart: always
    networks:
      - docker_network

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   restart: always
  #   networks:
  #     - docker_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    ports:
      - 5050:80
    depends_on:
      - db
    networks:
      - docker_network

volumes:
  postgres-data:

networks:
  docker_network:
    driver: bridge